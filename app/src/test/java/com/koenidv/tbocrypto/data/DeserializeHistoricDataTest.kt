package com.koenidv.tbocrypto.data

import kotlinx.coroutines.runBlocking
import okhttp3.OkHttpClient
import okhttp3.mockwebserver.MockResponse
import okhttp3.mockwebserver.MockWebServer
import org.junit.After
import org.junit.Assert.assertEquals
import org.junit.Before
import org.junit.Test

class DeserializeHistoricDataTest {
    private val mockServer = MockWebServer()
    private lateinit var api: CoingeckoInterface

    @Before
    fun setUp() {
        mockServer.start()
        mockServer.enqueue(
            MockResponse().setResponseCode(200).setBody(
                    "{\"prices\": [[1724112000000,53742.26074312489],[1724198400000,53072.96487740486],[1724284800000,54811.25973940124],[1724371200000,54317.08310206506],[1724457600000,57173.9518647258],[1724544000000,57319.03380665118],[1724630400000,57448.04865756021],[1724716800000,56355.54477751003],[1724803200000,53250.67556605576],[1724889600000,53049.55806257478],[1724976000000,53564.80049060293],[1725062400000,53481.26904169355],[1725148800000,53307.011182245114],[1725235200000,51929.8407759559],[1725268360000,52474.0595499011]],\"market_caps\": [[1724112000000,1061067922878.8774],[1724198400000,1047855615204.1729],[1724284800000,1082245173425.6625],[1724371200000,1072480197942.716],[1724457600000,1126449704877.065],[1724544000000,1130137190128.4998],[1724630400000,1134445401094.1704],[1724716800000,1112777064777.5403],[1724803200000,1052696200890.6747],[1724889600000,1048104543360.7959],[1724976000000,1057603318248.8383],[1725062400000,1056174914763.6614],[1725148800000,1052644976421.7173],[1725235200000,1025971504101.7284],[1725268360000,1036203525206.1731]],\"total_volumes\": [[1724112000000,21678542798.058605],[1724198400000,28280403717.648746],[1724284800000,29546835293.844273],[1724371200000,25338482846.447086],[1724457600000,40203764990.14742],[1724544000000,19681198155.428112],[1724630400000,15978900606.43484],[1724716800000,16027077290.044294],[1724803200000,34111499405.192535],[1724889600000,37771373954.530266],[1724976000000,29388408896.179905],[1725062400000,39813795557.68244],[1725148800000,10306119140.205893],[1725235200000,23055759148.414356],[1725268360000,25536841392.042187]]}"
                )
        )
        api = Retrofit.createApi(
            OkHttpClient(), mockServer.url("/").toString()
        )
    }


    @Test
    fun test() {
        var response: HistoricalData
        runBlocking {
            response = api.getHistoricData("bitcoin", 14, "daily")
        }
        println(response)

        assertEquals(15, response.prices.size)
        assertEquals(53742f, response.prices[0].eur, 1f)
        assertEquals("1724112000000", response.prices[0].timestamp.toString())
        assertEquals(52474f, response.prices[14].eur, 1f)
        assertEquals("1725268360000", response.prices[14].timestamp.toString())
    }

    @After
    fun tearDown() {
        mockServer.shutdown()
    }

}